#!/bin/sh
TAG="OVERWALL_RULE"
IPT="iptables -t nat"
FWI=$(uci -q get firewall.overwall.path) || FWI=/var/etc/overwall.include
FILE=/tmp/overwall.ipset
MODE=0

flush_iptables(){
	local ipt="iptables -t $1"
	local DAT=$(iptables-save -t $1)
	eval $(echo "$DAT" | grep $TAG | sed -e 's/^-A/$ipt -D/' -e 's/$/;/')
	for X in $(echo "$DAT" | awk '/^:OVERWALL/{print$1}');do
		$ipt -F ${X:1} 2>/dev/null && $ipt -X ${X:1}
	done
}

flush_dns(){
	while ip6tables -t nat -D PREROUTING -p $1 --dport 53 -m comment --comment $TAG -j REDIRECT --to-ports 53 2>/dev/null;do :;done
}

flush_r(){
	flush_iptables nat
	flush_iptables mangle
	flush_dns udp
	flush_dns tcp
	while ip rule del fwmark 1 lookup 100 2>/dev/null;do :;done
	ip route del local 0.0.0.0/0 dev lo table 100 2>/dev/null
	ipset -X over_wan_ac 2>/dev/null
	ipset -X over_lan_ac 2>/dev/null
	ipset -X fplan 2>/dev/null
	ipset -X gmlan 2>/dev/null
	ipset -X blacklist 2>/dev/null
	ipset -X youtube 2>/dev/null
	ipset -X netflix 2>/dev/null
	ipset -X custom 2>/dev/null
	ipset -X telegram 2>/dev/null
	ipset -X china_v4 2>/dev/null
	ipset -X china_v6 2>/dev/null
	ipset -X over_all 2>/dev/null
	echo '#!/bin/sh' > $FWI
}

ipset_r(){
	$IPT -N OVERWALL_WAN_FW || return 1
	$IPT -A OVERWALL_WAN_FW -p tcp $PROXY_PORTS -j REDIRECT --to-ports $local_port 2>/dev/null
	[ $MODE = oversea ] && B=1
	[ $MODE = router -o $MODE = all ] && [ ! "$PROXY_PORTS" ] && B=1
	[ $YB_SERVER ] && ipset -N youtube hash:net 2>/dev/null
	[ $NF_SERVER ] && ipset -N netflix hash:net 2>/dev/null
	[ $CU_SERVER ] && ipset -N custom hash:net 2>/dev/null
	[ $TG_SERVER ] && ipset -N telegram hash:net 2>/dev/null
	if [ $MODE != all ];then
		[ "$LAN_FP_IP" ] && ipset -N fplan hash:net 2>/dev/null
		[ "$WAN_FW_IP" -o "$x" -o $MODE != router -o -s /etc/overwall/black.list ] && ipset -N blacklist hash:net 2>/dev/null
		for i in $LAN_FP_IP;do ipset -! add fplan $i;done
		for i in $WAN_FW_IP;do ipset -! add blacklist $i;done
	fi
	if [ "$LAN_GM_IP" -a ! "$B" ];then
		C=1
		ipset -N gmlan hash:net 2>/dev/null
		for i in $LAN_GM_IP;do ipset -! add gmlan $i;done
	fi
	[ "$A" -o "$C" ] && /usr/share/overwall/chinaipset
	[ $MODE = router ] && /usr/share/overwall/chinaipset v6
	cat > $FILE  <<EOF
0.0.0.0/8
10.0.0.0/8
100.64.0.0/10
127.0.0.0/8
169.254.0.0/16
172.16.0.0/12
192.0.0.0/24
192.0.2.0/24
192.88.99.0/24
192.168.0.0/16
198.18.0.0/15
198.51.100.0/24
203.0.113.0/24
224.0.0.0/4
240.0.0.0/4
EOF
	sed -i 's/^/add over_wan_ac /' $FILE
	sed -i '1i\create over_wan_ac hash:net' $FILE
	ipset -F over_wan_ac 2>/dev/null
	ipset -R < $FILE 2>/dev/null
	rm -f $FILE
	for i in $WAN_BP_IP;do ipset -! add over_wan_ac $i;done
	$IPT -N OVERWALL_WAN_AC
	$IPT -A OVERWALL_WAN_AC -d $server -j RETURN
	if ipset list youtube >/dev/null 2>&1;then
		[ "$(uci -q get overwall.@global[0].yb_proxy)" = 1 ] && $IPT -A OVERWALL_WAN_AC -d $YB_SERVER -j OVERWALL_WAN_FW || ipset -! add over_wan_ac $YB_SERVER
		$IPT -A OVERWALL_WAN_AC -p tcp -m set --match-set youtube dst -j REDIRECT --to-ports $YB_PORT
	fi
	if ipset list netflix >/dev/null 2>&1;then
		[ "$(uci -q get overwall.@global[0].nf_proxy)" = 1 ] && $IPT -A OVERWALL_WAN_AC -d $NF_SERVER -j OVERWALL_WAN_FW || ipset -! add over_wan_ac $NF_SERVER
		$IPT -A OVERWALL_WAN_AC -p tcp -m set --match-set netflix dst -j REDIRECT --to-ports $NF_PORT
	fi
	if ipset list custom >/dev/null 2>&1;then
		[ "$(uci -q get overwall.@global[0].cu_proxy)" = 1 ] && $IPT -A OVERWALL_WAN_AC -d $CU_SERVER -j OVERWALL_WAN_FW || ipset -! add over_wan_ac $CU_SERVER
		$IPT -A OVERWALL_WAN_AC -p tcp -m set --match-set custom dst -j REDIRECT --to-ports $CU_PORT
	fi
	if ipset list telegram >/dev/null 2>&1;then
		[ "$(uci -q get overwall.@global[0].tg_proxy)" = 1 ] && $IPT -A OVERWALL_WAN_AC -d $TG_SERVER -j OVERWALL_WAN_FW || ipset -! add over_wan_ac $TG_SERVER
		$IPT -A OVERWALL_WAN_AC -p tcp -m set --match-set telegram dst -j REDIRECT --to-ports $TG_PORT
	fi
	$IPT -A OVERWALL_WAN_AC -m set --match-set over_wan_ac dst -j RETURN
	ipset list fplan >/dev/null 2>&1 && $IPT -A OVERWALL_WAN_AC -m set --match-set fplan src -j OVERWALL_WAN_FW
	ipset list blacklist >/dev/null 2>&1 && $IPT -A OVERWALL_WAN_AC -m set --match-set blacklist dst -j OVERWALL_WAN_FW
	ipset list gmlan >/dev/null 2>&1 && $IPT -A OVERWALL_WAN_AC -m set --match-set gmlan src -m set ! --match-set china_v4 dst -j OVERWALL_WAN_FW

	case $MODE in
		router)$IPT -A OVERWALL_WAN_AC -m set ! --match-set china_v4 dst -j OVERWALL_WAN_FW;;
		oversea)$IPT -A OVERWALL_WAN_AC -m set --match-set china_v4 dst -j OVERWALL_WAN_FW;;
		all)$IPT -A OVERWALL_WAN_AC -j OVERWALL_WAN_FW;;
	esac

	if [ "$LAN_AC_IP" ];then
		ipset -! -R <<-EOF || return 1
		create over_lan_ac hash:net
		$(for i in ${LAN_AC_IP:1};do echo "add over_lan_ac $i";done)
EOF
		case "${LAN_AC_IP:0:1}" in
			w|W)MATCH_SET="-m set --match-set over_lan_ac src";;
			b|B)MATCH_SET="-m set ! --match-set over_lan_ac src";;
		esac
	fi

	$IPT -I PREROUTING 1 -p tcp $MATCH_SET -m comment --comment $TAG -j OVERWALL_WAN_AC
	if [ $y ];then
		$IPT -I PREROUTING 1 -p udp --dport 53 -m comment --comment $TAG -j REDIRECT --to-ports 53
		$IPT -I PREROUTING 2 -p tcp --dport 53 -m comment --comment $TAG -j REDIRECT --to-ports 53
		ip6tables -t nat -I PREROUTING 1 -p udp --dport 53 -m comment --comment $TAG -j REDIRECT --to-ports 53
		ip6tables -t nat -I PREROUTING 2 -p tcp --dport 53 -m comment --comment $TAG -j REDIRECT --to-ports 53
	fi
	$IPT -I OUTPUT 1 -p tcp -m comment --comment $TAG -j OVERWALL_WAN_AC
}

tp_rule(){
	[ $SERVER ] || return 0
	ip rule add fwmark 1 lookup 100
	ip route add local 0.0.0.0/0 dev lo table 100
	ipt="iptables -t mangle"
	$ipt -N OVERWALL_TPROXY
	if ipset list china_v4 >/dev/null 2>&1;then
		[ $MODE = oversea ] && a= || a=!
		$ipt -A OVERWALL_TPROXY -p udp -m set $a --match-set china_v4 dst --dport 80 -j DROP
		$ipt -A OVERWALL_TPROXY -p udp -m set $a --match-set china_v4 dst --dport 443 -j DROP
	elif ipset list blacklist >/dev/null 2>&1;then
		$ipt -A OVERWALL_TPROXY -p udp -m set --match-set blacklist dst --dport 80 -j DROP
		$ipt -A OVERWALL_TPROXY -p udp -m set --match-set blacklist dst --dport 443 -j DROP
	fi
	$ipt -A OVERWALL_TPROXY -p udp --dport 53 -j RETURN
	$ipt -A OVERWALL_TPROXY -p udp -d $SERVER -j RETURN
	$ipt -A OVERWALL_TPROXY -p udp -m set --match-set over_wan_ac dst -j RETURN
	ipset list fplan >/dev/null 2>&1 && $ipt -A OVERWALL_TPROXY -p udp $PROXY_PORTS -m set --match-set fplan src -j TPROXY --on-port $LOCAL_PORT --tproxy-mark 0x1/0x1
	ipset list blacklist >/dev/null 2>&1 && $ipt -A OVERWALL_TPROXY -p udp $PROXY_PORTS -m set --match-set blacklist dst -j TPROXY --on-port $LOCAL_PORT --tproxy-mark 0x1/0x1
	ipset list gmlan >/dev/null 2>&1 && $ipt -A OVERWALL_TPROXY -p udp -m set --match-set gmlan src -m set ! --match-set china_v4 dst -j TPROXY --on-port $LOCAL_PORT --tproxy-mark 0x1/0x1

	case $MODE in
		router)$ipt -A OVERWALL_TPROXY -p udp $PROXY_PORTS -m set ! --match-set china_v4 dst -j TPROXY --on-port $LOCAL_PORT --tproxy-mark 0x1/0x1;;
		oversea)$ipt -A OVERWALL_TPROXY -p udp $PROXY_PORTS -m set --match-set china_v4 dst -j TPROXY --on-port $LOCAL_PORT --tproxy-mark 0x1/0x1;;
		all)$ipt -A OVERWALL_TPROXY -p udp $PROXY_PORTS -j TPROXY --on-port $LOCAL_PORT --tproxy-mark 0x1/0x1;;
	esac

	ipset -N over_all hash:net 2>/dev/null
	for i in $(ip -4 add show | grep -v $(uci -qP /tmp/state get network.wan.ifname || echo 127.0.0.1) | grep inet | grep -v 127.0.0.1 | awk '{print$2}');do
		ipset -! add over_all $i
	done
	$ipt -I PREROUTING 1 -p udp $MATCH_SET -m set --match-set over_all src -m comment --comment $TAG -j OVERWALL_TPROXY
}

gen_include(){
	extract_rules() {
		echo "*$1"
		iptables-save -t $1 | grep OVERWALL | sed "s/^-A \(OUTPUT\|PREROUTING\)/-I \1 1/"
		echo 'COMMIT'
	}
	cat <<-EOF >> $FWI
	iptables-save -c | grep -v OVERWALL | iptables-restore -c
	iptables-restore -n <<-EOT
	$(extract_rules nat)
	$(extract_rules mangle)
	EOT
EOF
	if [ $y ];then
		sed -i -e 's/-I PREROUTING 1 -p tcp/-I PREROUTING 2 -p tcp/' -e 's/PREROUTING 2 -p tcp -m set/PREROUTING 3 -p tcp -m set/' $FWI
		cat <<-EOF >> $FWI
	while ip6tables -t nat -D PREROUTING -p udp --dport 53 -m comment --comment $TAG -j REDIRECT --to-ports 53 2>/dev/null;do :;done
	while ip6tables -t nat -D PREROUTING -p tcp --dport 53 -m comment --comment $TAG -j REDIRECT --to-ports 53 2>/dev/null;do :;done
	ip6tables -t nat -I PREROUTING 1 -p udp --dport 53 -m comment --comment $TAG -j REDIRECT --to-ports 53
	ip6tables -t nat -I PREROUTING 2 -p tcp --dport 53 -m comment --comment $TAG -j REDIRECT --to-ports 53
EOF
	fi
}

while getopts ":s:l:S:L:N:P:Y:Z:H:I:J:K:a:b:w:p:G:D:rczxyf" arg;do
	case $arg in
		s)server=$OPTARG;;
		l)local_port=$OPTARG;;
		S)SERVER=$OPTARG;;
		L)LOCAL_PORT=$OPTARG;;
		N)YB_SERVER=$OPTARG;;
		P)YB_PORT=$OPTARG;;
		Y)NF_SERVER=$OPTARG;;
		Z)NF_PORT=$OPTARG;;
		H)CU_SERVER=$OPTARG;;
		I)CU_PORT=$OPTARG;;
		J)TG_SERVER=$OPTARG;;
		K)TG_PORT=$OPTARG;;
		a)LAN_AC_IP=$OPTARG;;
		b)WAN_BP_IP=$(for i in $OPTARG;do echo $i;done);;
		w)WAN_FW_IP=$OPTARG;;
		p)LAN_FP_IP=$OPTARG;;
		G)LAN_GM_IP=$OPTARG;;
		D)PROXY_PORTS=$OPTARG;;
		r)MODE=router;A=1;;
		c)MODE=oversea;A=1;;
		z)MODE=all;;
		x)x=1;;
		y)y=1;;
		f)flush_r;exit 0;;
	esac
done

[ "$server" -a "$local_port" ] || exit 1
flush_r;ipset_r && tp_rule && gen_include || exit 1
